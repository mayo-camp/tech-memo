name: Markdown to PDF

on:
  push:
    paths:
      - "**/*.md"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ソース取得
      - uses: actions/checkout@v3

      # Node.js セットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 依存パッケージインストール
      - name: Install dependencies
        run: |
          npm install -g puppeteer marked

      # PDF 生成
      - name: Convert Markdown to PDF
        run: |
          mkdir -p pdf
          for file in $(git diff --name-only HEAD^ HEAD | grep '\.md$' || true); do
            echo "Processing $file ..."
            base=$(basename "$file" .md)
            dir=$(dirname "$file")

            # HTML生成
            npx marked "$file" > "$dir/$base.html"
            curl -s -O https://raw.githubusercontent.com/sindresorhus/github-markdown-css/main/github-markdown.css
            echo '<!DOCTYPE html><html><head><meta charset="utf-8"><link rel="stylesheet" href="github-markdown.css"></head><body class="markdown-body">' > header.html
            echo '</body></html>' > footer.html
            cat header.html "$dir/$base.html" footer.html > "$dir/full.html"

            # PDF生成（Markdownと同階層を基準）
            node -e "
            const puppeteer = require('puppeteer');
            (async () => {
              const browser = await puppeteer.launch();
              const page = await browser.newPage();
              await page.goto('file://' + process.cwd() + '/$dir/full.html', {waitUntil: 'networkidle0'});
              await page.pdf({path: 'pdf/${base}.pdf', format: 'A4', printBackground: true});
              await browser.close();
            })();
            "
          done

      # PDF専用リポジトリに push
      - name: Push PDFs to PDF repository
        env:
          PDF_REPO_TOKEN: ${{ secrets.PDF_REPO_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # PDFリポジトリを一時フォルダにクローン
          git clone https://x-access-token:${PDF_REPO_TOKEN}@github.com/username/pdf-repo.git pdf-temp
          
          # 生成PDFをコピー
          cp pdf/*.pdf pdf-temp/

          cd pdf-temp
          git add .
          if git diff --cached --quiet; then
            echo "No PDF changes to commit."
          else
            git commit -m "chore: update PDFs from main repository"
            git push
          fi
